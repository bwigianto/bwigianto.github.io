{"version":3,"sources":["components/Story.js","components/PuzzleGame.js","App.js","reportWebVitals.js","index.js"],"names":["Story","React","createElement","resetAnimation","animationName","animationElement","document","querySelector","concat","style","animation","offsetHeight","PuzzleGame","_useState","useState","_useState2","_slicedToArray","story","_useState3","_useState4","_useState5","_useState6","isCorrect","setIsCorrect","onSubmit","e","preventDefault","userAnswer","target","elements","answer","value","setTimeout","type","name","placeholder","Fragment","className","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"0OAWeA,MATf,WACE,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,SAAG,iHCFT,SAASC,EAAeC,GACtB,IAAMC,EAAmBC,SAASC,cAAa,oBAAAC,OAAqBJ,EAAa,OAC7EC,IACFA,EAAiBI,MAAMC,UAAY,OAEnCL,EAAiBM,aACjBN,EAAiBI,MAAMC,UAAY,GACnCL,EAAiBI,MAAMC,UAAS,GAAAF,OAAMJ,EAAa,iBAmDxCQ,MA9Cf,WAAsB,IAAAC,EACMC,mBAAS,gCAA+BC,EAAAC,YAAAH,EAAA,GAA3DI,EAAKF,EAAA,GAAUG,GAAAH,EAAA,GACMD,mBAAS,KAAGK,EAAAH,YAAAE,EAAA,GAAhBE,GAAXD,EAAA,GAAWA,EAAA,GACUL,mBAAS,OAAKO,EAAAL,YAAAI,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAsB9B,OACEpB,IAAAC,cAAA,WACED,IAAAC,cAACF,EAAK,CAACiB,MAAOA,IACdhB,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,QAAMsB,SApBW,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAOC,SAASC,OAAOC,MAC5CR,EANuB,aAMEI,GAEP,OAAdL,GAAsBA,GACxBnB,EAAe,WACf6B,WAAW,WACT7B,EAAe,UACd,MAEHA,EAAe,WAUbF,IAAAC,cAAA,SAAO+B,KAAK,OAAOC,KAAK,SAASC,YAAY,sBAC7ClC,IAAAC,cAAA,UAAQ+B,KAAK,UAAS,WAET,OAAdX,GACCrB,IAAAC,cAAAD,IAAAmC,SAAA,KACGd,EACCrB,IAAAC,cAAA,OAAKmC,UAAU,qBAAoB,YAEnCpC,IAAAC,cAAA,OAAKmC,UAAU,mBAAkB,mBCrC9BC,MAXf,WACE,OACErC,IAAAC,cAACqC,IAAa,KACZtC,IAAAC,cAACsC,IAAM,KACLvC,IAAAC,cAACuC,IAAK,CAACC,KAAK,IAAIC,QAAS1C,IAAAC,cAACU,EAAU,QAAO,KACzCX,IAAAC,cAACuC,IAAK,CAACC,KAAK,QAAQC,QAAS1C,IAAAC,cAACU,EAAU,WCCnCgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAtB,EAAA,GAAAuB,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWnD,SAASoD,eAAe,SACpDC,OACH1D,IAAAC,cAACD,IAAM2D,WAAU,KACf3D,IAAAC,cAACoC,EAAG,QAORM","file":"static/js/main.f9e3348c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Story() {\n  return (\n    <div>\n      <h1>Puzzle Story</h1>\n      <p>I have keys, but no locks. I have space, but no room. You can enter, but can't go inside. What am I?</p>\n    </div>\n  );\n}\n\nexport default Story;\n\n","import React, { useState } from 'react';\nimport AnswerInput from './AnswerInput';\nimport Story from './Story';\n\nfunction resetAnimation(animationName) {\n  const animationElement = document.querySelector(`[data-animation=\"${animationName}\"]`);\n  if (animationElement) {\n    animationElement.style.animation = 'none';\n    // eslint-disable-next-line no-unused-expressions\n    animationElement.offsetHeight; // trigger reflow\n    animationElement.style.animation = '';\n    animationElement.style.animation = `${animationName} 1s forwards`;\n  }\n}\n\n\nfunction PuzzleGame() {\n  const [story, setStory] = useState('Here is your puzzle story...');\n  const [answer, setAnswer] = useState('');\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  const checkAnswer = (inputAnswer) => {\n    return inputAnswer === \"keyboard\";\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const userAnswer = e.target.elements.answer.value;\n    setIsCorrect(checkAnswer(userAnswer));\n\n    if (isCorrect !== null && isCorrect ) {\n      resetAnimation('correct');\n      setTimeout(() => {\n        resetAnimation('wrong');\n      }, 1000);\n    } else {\n      resetAnimation('wrong');\n    }\n  };\n\n\n  return (\n    <div>\n      <Story story={story} />\n      <h1>Your Answer</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"answer\" placeholder=\"Enter your answer\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {isCorrect !== null && (\n        <>\n          {isCorrect ? (\n            <div className=\"correct-animation\">Correct!</div>\n          ) : (\n            <div className=\"wrong-animation\">Wrong!</div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default PuzzleGame;\n\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Story from './components/Story';\nimport PuzzleGame from './components/PuzzleGame';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<PuzzleGame />} />\n        //<Route path=\"/game\" element={<PuzzleGame />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}