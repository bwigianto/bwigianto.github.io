{"version":3,"sources":["components/MathProblem.js","components/DrawingPane.js","App.js","reportWebVitals.js","index.js"],"names":["MathProblem","_ref","setCorrectAnswer","_useState","useState","_useState2","_slicedToArray","problem","setProblem","useEffect","generateProblem","num1","Math","floor","random","num2","concat","React","createElement","onClick","DrawingPane","canvasRef","useRef","contextRef","isDrawingRef","handleMouseUp","current","canvas","width","height","context","getContext","lineWidth","initializeCanvas","className","ref","onMouseDown","event","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","moveTo","onMouseMove","lineTo","stroke","onMouseUp","onMouseLeave","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","convertImageToText","_asyncToGenerator","_callee","worker","_yield$worker$recogni","text","userAttempt","_context","recognize","tessedit_char_whitelist","data","trim","console","log","_x","_x2","apply","arguments","App","setResult","_useState3","_useState4","correctAnswer","_useState5","_useState6","setWorker","_ref2","_callee2","newWorker","_context2","createWorker","load","loadLanguage","initialize","initWorker","terminate","handleSubmit","_ref3","_callee3","answer","_context3","document","querySelector","parseInt","clearRect","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ead3e4af.chunk.js","sourcesContent":["// MathProblem.js\nimport React, { useState, useEffect } from \"react\";\n\nconst MathProblem = ({ setCorrectAnswer }) => {\n  const [problem, setProblem] = useState(\"\");\n\n  useEffect(() => {\n    generateProblem();\n  }, []);\n\n  const generateProblem = () => {\n    const num1 = Math.floor(Math.random() * 10);\n    const num2 = Math.floor(Math.random() * 10);\n    setProblem(`${num1} + ${num2}`);\n    setCorrectAnswer(num1 + num2);\n  };\n\n  return (\n    <div>\n      <h2>{problem}</h2>\n      <button onClick={generateProblem}>Generate New Problem</button>\n    </div>\n  );\n};\n\nexport default MathProblem;\n","import React, { useRef } from \"react\";\nimport \"./DrawingPane.css\";\n\nconst DrawingPane = () => {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const isDrawingRef = useRef(false);\n\n  const handleMouseDown = (event) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    contextRef.current.moveTo(x, y);\n    isDrawingRef.current = true;\n  };\n\n  const handleMouseMove = (event) => {\n    if (!isDrawingRef.current) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    contextRef.current.lineTo(x, y);\n    contextRef.current.stroke();\n  };\n\n  const handleMouseUp = () => {\n    isDrawingRef.current = false;\n  };\n\n  const initializeCanvas = () => {\n    const canvas = canvasRef.current;\n    canvas.width = 400;\n    canvas.height = 200;\n    const context = canvas.getContext(\"2d\");\n    context.lineWidth = 5;\n    contextRef.current = context;\n  };\n\n  React.useEffect(() => {\n    initializeCanvas();\n  }, []);\n\n  return (\n    <div className=\"drawing-pane\">\n      <canvas\n        className=\"canvas\"\n        ref={canvasRef}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default DrawingPane;\n","import React, { useState, useEffect } from \"react\";\nimport MathProblem from \"./components/MathProblem\";\nimport DrawingPane from \"./components/DrawingPane\";\nimport { createWorker } from \"tesseract.js\";\n\nconst convertImageToText = async (canvas, worker) => {\n  const {\n    data: { text },\n  } = await worker.recognize(canvas, {\n    tessedit_char_whitelist: \"0123456789\",\n  });\n\n  const userAttempt = text.trim();\n  console.log(userAttempt);\n  return userAttempt;\n};\n\nconst App = () => {\n  const [result, setResult] = useState(null);\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [worker, setWorker] = useState(null);\n\n  useEffect(() => {\n    const initWorker = async () => {\n      const newWorker = await createWorker();\n      await newWorker.load();\n      await newWorker.loadLanguage(\"eng\");\n      await newWorker.initialize(\"eng\");\n      setWorker(newWorker);\n    };\n\n    initWorker();\n\n    return () => {\n      if (worker) {\n        worker.terminate();\n      }\n    };\n  }, []);\n\n  const handleSubmit = async () => {\n    if (!worker) return;\n\n    const canvas = document.querySelector(\"canvas\");\n    const answer = await convertImageToText(canvas, worker);\n\n    if (parseInt(answer) === correctAnswer) {\n      setResult(\"Correct\");\n    } else {\n      setResult(\"Incorrect\");\n    }\n    canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  return (\n    <div>\n      <MathProblem setCorrectAnswer={setCorrectAnswer} />\n      <DrawingPane />\n      <button onClick={handleSubmit}>Submit</button>\n      <p>{result}</p>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}